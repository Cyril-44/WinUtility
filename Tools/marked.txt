"struct Edge",
"{",
"    int to, next, w;",
"} e[M];",
"int head[N], deg[N], ans[N];",
"inline void addedg(const int &fr, const int &to, const int &dis)",
"{",
"    ++head[0];",
"    e[head[0]] = {to, head[fr], dis};",
"    head[fr] = head[0];",
"    ++deg[to];",
"}",
"inline bool tpsort(const int &n)",
"{",
"    int h = 0, r = 0;",
"    for (int i = 1; i <= n; i++)",
"        if (!deg[i])",
"            ans[r++] = i;",
"    while (h < r)",
"    {",
"        for (int i = head[ans[h++]]; i; i = e[i].next)",
"            if (--deg[e[i].to] == 0)",
"                ans[r++] = e[i].to;",
"    }",
"    return r == n;",
"}",
"#include <queue>",
"inline bool tpsort_min_order(const int &n)",
"{",
"    std::priority_queue<int, std::vector<int>, std::greater<int>> q;",
"    int p = 0, u;",
"    for (int i = 1; i <= n; i++)",
"        if (!deg[i])",
"            q.push(i);",
"    while (!q.empty())",
"    {",
"        ans[p++] = u = q.top(), q.pop();",
"        for (int i = head[u]; i; i = e[i].next)",
"            if (--deg[e[i].to] == 0)",
"                q.push(e[i].to);",
"    }",
"    return p == n;",
"}"
